@page
@using Microsoft.EntityFrameworkCore
@model House2Invest.Pages.Documentacao.DocumentoPDFModel
@inject House2Invest.Data.ApplicationDbContext _contexto
@{
    Layout = null;

    ViewData["Title"] = "Documentos PDF";
    var _appconfig = new House2Invest.Models.AppPerfil();
    try
    {
        _appconfig =
            _contexto.AppPerfil
            .Include(v => v.AppConfiguracoes)
            .Include(x => x.AppConfiguracoes.AppConfiguracoes_Aplicativo)
            .Include(y => y.AppConfiguracoes.AppConfiguracoes_Azure)
            .FirstOrDefault();
    }
    catch (Exception) { }

    var _stringConteudo = "";
}
@try
{
    @if (_appconfig == null || _appconfig.AppConfiguracoes.Tema.ToLower().Trim() == "_layoutfundpress")
    {
        if (Model.modelo.TIPO.ToLower().Trim() == "setoratuacaohist")
        {
            _stringConteudo = Model.construtora.SetorAtuacaoHist;
        }
        else if (Model.modelo.TIPO.ToLower().Trim() == "sociedadeadms")
        {
            _stringConteudo = Model.construtora.SociedadeAdms;
        }
        else if (Model.modelo.TIPO.ToLower().Trim() == "infoplanonegocios")
        {
            _stringConteudo = Model.construtora.InfoPlanoNegocios;
        }
        else if (Model.modelo.TIPO.ToLower().Trim() == "infovalormobofertado")
        {
            _stringConteudo = Model.construtora.InfoValorMobOfertado;
        }
        else if (Model.modelo.TIPO.ToLower().Trim() == "comunprestinfocontaposoferta")
        {
            _stringConteudo = Model.construtora.ComunPrestInfoContAposOferta;
        }
        else if (Model.modelo.TIPO.ToLower().Trim() == "alertasobreriscos")
        {
            _stringConteudo = Model.construtora.AlertaSobreRiscos;
        }
        else if (Model.modelo.TIPO.ToLower().Trim() == "inforemunplataforma")
        {
            _stringConteudo = Model.construtora.InfoRemunPlataforma;
        }
        else if (Model.modelo.TIPO.ToLower().Trim() == "caracofertatribuaplicavel")
        {
            _stringConteudo = Model.construtora.CaracOfertaTribuAplicavel;
        }
        else if (Model.modelo.TIPO.ToLower().Trim() == "incorpconstrut")
        {
            _stringConteudo = Model.construtora.IncorpConstrut;
        }
        else if (Model.modelo.TIPO.ToLower().Trim() == "estudoviabecofinanc")
        {
            _stringConteudo = Model.construtora.EstudoViabEcoFinanc;
        }
        else if (Model.modelo.TIPO.ToLower().Trim() == "outrasinfos")
        {
            _stringConteudo = Model.construtora.OutrasInfos;
        }
    }
}
catch (Exception) { }

@* https://localhost:44339/documentacao/documentopdf?tp=AlertaSobreRiscos&idconstru=1 *@
@if (Model.modelo.TIPO.ToLower().Trim() == "informe_rend_financ")
{
    <style>
        table, th, td {
            border: 1px solid black;
            padding: 5px;
        }

        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
        }
    </style>
    <div style="max-width:1200px;display:block;margin:auto;">
        <div style="margin-top:50px;">
            <p style="margin-bottom:25px;">
                <img src="https://depoisdalinha.blob.core.windows.net/house2invest/docs/house2invest.png" />
            </p>
            <p style="font-size:16px;">
                <b>INFORME DE RENDIMENTOS FINANCEIROS</b>
            </p>
            <p style="font-size:16px;">
                <b>ANO-CALENDÁRIO DE @(DateTime.Now.Year - 1)</b>
            </p>
            <p style="font-size:14px;">
                Imposto de Renda - Pessoa Física
            </p>

            <p style="font-size:18px;margin-top:50px;">
                <b>1- PESSOA FÍSICA BENEFICIÁRIA DOS RENDIMENTOS</b>
            </p>

            <p style="font-size:18px;margin:25px auto;">
                <hr />
            </p>

            <p style="font-size:16px;margin:25px auto;">
                <table style="width:100%;text-align:left;">
                    <tr style="">
                        <th style="">NOME</th>
                        <th style="">CPF</th>
                    </tr>
                    <tr>
                        <td>@Model.modelo.NOME</td>
                        <td>@Model.modelo.CPF</td>
                    </tr>
                </table>
            </p>

            <p style="font-size:18px;margin-top:50px;">
                <b>51 - CRÉDITO DECORRENTE DE EMPRÉSTIMO</b>
            </p>

            <p style="font-size:16px;margin:25px auto;">
                <table style="width:100%;text-align:left;">
                    <tr style="">
                        <th style="">DISCRIMINAÇÃO</th>
                        <th style="">SALDO EM 31/12/@(DateTime.Now.Year - 2)</th>
                        <th style="">SALDO EM 31/12/@(DateTime.Now.Year - 1)</th>
                        <th style="">RENDIMENTOS</th>
                        <th style="">IR RETIDO EM FONTE</th>
                    </tr>

                    @{
                        var _listaLancas =
                            _contexto.InvestimentoConfirmacoes
                            .Include(x => x.BlocoProjInvestimentos)
                            .Include(x => x.BlocoProjInvestimentos.Construtora)
                            .Include(x => x.UsuarioApps)
                            .Where(x => x.UsuarioApps.Email == Model.modelo.EMAILUSU)
                            .GroupBy(x => x.BlocoProjInvestimentos.Construtora);
                    }


                    @foreach (var item in _listaLancas)
                    {
                        <tr>
                            <td>
                                @Html.Raw($"{item.FirstOrDefault().BlocoProjInvestimentos.Construtora.RazaoSocial} - {item.FirstOrDefault().BlocoProjInvestimentos.Construtora.CNPJ}")
                            </td>
                            <td>
                                @Html.Raw(item.Where(x => x.DTHR.Year == (DateTime.Now.Year - 2)).Sum(x => x.Valor).ToString("C2"))
                            </td>
                            <td>
                                @Html.Raw(item.Sum(x => x.Valor).ToString("C2"))
                            </td>
                            <td>
                                R$ 0,00
                            </td>
                            <td>
                                R$ 0,00
                            </td>
                        </tr>
                    }
                </table>
            </p>
        </div>
    </div>
}
else
{
    <style>
        .container-texto {
            margin-top: 200px;
            line-height: 40px;
            font-size: 20px;
        }

            .container-texto .texto {
                text-align: justify;
            }

            .container-texto .datalocal {
                text-align: center;
                padding-bottom: 150px;
            }
    </style>
    <div class="container container-texto">
        <div class="row">
            <div class="col-12">
                <h2 class="cor-house2invest">
                    @Html.Raw(Model.modelo.TIPO.ToLower().Trim() == "anexo4a" ? "ANEXO 4-A" : Model.modelo.TIPO.ToLower().Trim() == "anexo4b" ? "ANEXO 4-B" : Model.modelo.TIPO.ToLower().Trim() == "anexo4c" ? "ANEXO 4-C" : "")
                </h2>
                <p class="texto">
                    @Html.Raw(_stringConteudo)
                </p>
                <p class="datalocal">
                    <b>
                        SÃO PAULO, @Html.Raw(DateTime.Now.ToLongDateString().ToUpper())
                    </b><br>
                    <b>
                        @Html.Raw($"{Model.modelo.NOME} - {Model.modelo.CPF}")
                    </b><br>
                </p>
            </div>
        </div>
    </div>
}